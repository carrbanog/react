js는 html생성 그 요소를 js로 받아서 작성
react는 js로 생성해서 html을 만든다
react는 ui에서 바뀐부분만 업데이트 해줌
const data = React.useState(0);
console.log(data); 
[undefined, f]가 출력되는데 
undefiend는 내가 담으려는 data값, f는 data를 바꿀때 사용하는 함수

const [counter, modifier] = React.useState(0);
0은 counter의 초기값

배열 이름 부여
const food = ["tomato", "potato"];
const [first, second] = food;
console.log(first) => tomato
console.log(second) => potato

{}안에 js사용가능

      const onFlip = () => {
        setFlipped((current) => !current); current는 현재값(current말고 다른 값 가능)
        reset();
      }


  //props
  function Btn(props){ Btn({dd})도 가능
    console.log(props);
    return (
      <button style={{
        backgroundColor:"tomato",
        color:"white",
        padding:"10px 20px",
        borderRadius:10,
        border:0
      }}>{props.dd}</button>
    )
  }
  function App(){
    return(
      <div>
        <Btn dd="Save Change" aa="a" cc="c" /> Btn함수로 생각하면 편함
        <Btn dd="Continue" />
      </div>
    )
  }
dd는 Btn컴포넌트에 전달된 하나의 속성
props는 컴포넌트에 전달된 속성을 나타내는 객체 Btn의 매개변수
props는 첫번째이자 유일한 인자
props는 오브젝트이기 때문에 Btn({dd})이대로 받는것도 가능
Btn({dd, aa})


React.memo();
const MemorizedBtn = React.memo(Btn);
//불필요한 재렌더링 방지
//<MemorizedBtn text={value} onClick={changeValue} /> 이 부분클릭하면 변경되서 새로 렌더링 하지만 <MemorizedBtn text="Continue" /> 이 부분은 똑같기때문에 렌더링x
<MemorizedBtn text={value} fontSize={18} />
<MemorizedBtn text="Continue" />

useEffect()는 처음 render 될때만 실행하고 그 이후에는 실행하지 않는 함수를 넣음
  useEffect(() => {
    console.log(keyword);
  }, [keyword]); keyword가 변할때 마다 실행
 

SetToDos(currentArray => [toDo, ...currentArray])
toDo를 currentArray에 push
[toDo, currentArray]를 하면 [toDo, currentArray]라는 새로운 배열이 만들어짐

{todos.map((item) => {<li>{item}</li>})}
{}를 사용해 함수를 정의할때는 return키워드 필요
{todos.map((item) => {
  return <li>{item}</li>;
})}
{todos.map((item) => (
  <li>{item}</li>
))}
둘중 하나로 수정

.then((json) => {
  setMovies(json.data.movies);
  setLoading(false);
}) 이 코드는 반환을 할 필요가 없어서 return이 필요없음

{movies.map((movie) => {
  return <li>{movie.title}</li>
})}
이 코드는 <li>{movie.title}</li>이 부분을 반환해야해서 필요함